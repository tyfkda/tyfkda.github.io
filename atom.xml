<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kludge Factory</title>
  
  <subtitle>tyfkda&#39;s blog</subtitle>
  <link href="https://tyfkda.github.io/atom.xml" rel="self"/>
  
  <link href="https://tyfkda.github.io/"/>
  <updated>2022-03-13T00:52:15.537Z</updated>
  <id>https://tyfkda.github.io/</id>
  
  <author>
    <name>tyfkda</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>リンカーを自作した</title>
    <link href="https://tyfkda.github.io/blog/2022/03/13/elf-linker.html"/>
    <id>https://tyfkda.github.io/blog/2022/03/13/elf-linker.html</id>
    <published>2022-03-13T00:00:00.000Z</published>
    <updated>2022-03-13T00:52:15.537Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/tyfkda/xcc/&quot;&gt;自作Cコンパイラ&lt;/a&gt;ではすべて自分で実装してみるというつもりでCコンパイラ、プリプロセッサ、アセンブラを作ってきたが、ついに欠けている最後の要素だったリンカーを作った。&lt;/p&gt;</summary>
    
    
    
    
    <category term="compiler" scheme="https://tyfkda.github.io/tags/compiler/"/>
    
    <category term="elf" scheme="https://tyfkda.github.io/tags/elf/"/>
    
  </entry>
  
  <entry>
    <title>【C++】多重継承の仮想関数呼び出しはどう実現されるか？</title>
    <link href="https://tyfkda.github.io/blog/2022/02/26/multiple-inheritance-vtable.html"/>
    <id>https://tyfkda.github.io/blog/2022/02/26/multiple-inheritance-vtable.html</id>
    <published>2022-02-26T03:00:00.000Z</published>
    <updated>2022-02-26T03:28:03.465Z</updated>
    
    
    <summary type="html">&lt;p&gt;C++でクラスを多重継承した場合にどのようなコードが生成されて、 &lt;code&gt;virtual&lt;/code&gt; 関数の呼び出しがどのようになるのかを調べた。
多重継承できるのはC++くらいだけど、JavaやC#などでインタフェースを使用する場合にも同じような動作が求められるので、どういう処理になるか推測できると思う。&lt;/p&gt;</summary>
    
    
    
    
    <category term="cplusplus" scheme="https://tyfkda.github.io/tags/cplusplus/"/>
    
  </entry>
  
  <entry>
    <title>MacBookで画面を高解像度にする</title>
    <link href="https://tyfkda.github.io/blog/2022/02/05/macbook-highres.html"/>
    <id>https://tyfkda.github.io/blog/2022/02/05/macbook-highres.html</id>
    <published>2022-02-05T06:13:26.000Z</published>
    <updated>2022-02-05T09:50:27.310Z</updated>
    
    
    <summary type="html">&lt;p&gt;MacBookで、画面を広くしてとにかくたくさんの情報を表示させたい主義の人向け。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【VSCode】Ctrl-mで改行入力</title>
    <link href="https://tyfkda.github.io/blog/2022/01/28/vscode-return.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/28/vscode-return.html</id>
    <published>2022-01-28T03:00:00.000Z</published>
    <updated>2022-01-28T12:59:25.260Z</updated>
    
    
    <summary type="html">&lt;p&gt;VSCodeのキーバインドで「Ctrl-m」を改行にしたかったが、一手間必要だった話。&lt;/p&gt;
&lt;p&gt;環境：macOS Monterey、VSCode 1.63.2&lt;/p&gt;</summary>
    
    
    
    
    <category term="texteditor" scheme="https://tyfkda.github.io/tags/texteditor/"/>
    
  </entry>
  
  <entry>
    <title>【C#】インデックスオペレータ</title>
    <link href="https://tyfkda.github.io/blog/2022/01/27/cs-index-operator.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/27/cs-index-operator.html</id>
    <published>2022-01-27T08:00:00.000Z</published>
    <updated>2022-01-27T08:19:57.555Z</updated>
    
    
    <summary type="html">&lt;p&gt;VSCodeでC#のコードを書いていて、配列の最後の要素を取得したところ「Use index operator」というサジェストが出てきた：&lt;/p&gt;</summary>
    
    
    
    
    <category term="csharp" scheme="https://tyfkda.github.io/tags/csharp/"/>
    
  </entry>
  
  <entry>
    <title>【git】まれに使用するエイリアス６選</title>
    <link href="https://tyfkda.github.io/blog/2022/01/23/git-my-alias.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/23/git-my-alias.html</id>
    <published>2022-01-23T00:50:00.000Z</published>
    <updated>2022-01-23T00:57:07.584Z</updated>
    
    
    <summary type="html">&lt;p&gt;gitでたまによく使う操作、だからどうも覚えられないというものがある。
そういうものはエイリアスとして登録しておくと便利。&lt;/p&gt;</summary>
    
    
    
    
    <category term="git" scheme="https://tyfkda.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>【git】あとから修正を差し込む（fixupとautosquash）</title>
    <link href="https://tyfkda.github.io/blog/2022/01/16/git-fixup-autosquash.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/16/git-fixup-autosquash.html</id>
    <published>2022-01-16T00:02:46.000Z</published>
    <updated>2022-01-18T09:16:04.744Z</updated>
    
    
    <summary type="html">&lt;p&gt;gitでコミットをいくつか進めているうちに「以前のコミットにこの修正もまとめたい」ということが結構ある。
そういう場合に &lt;code&gt;fixup&lt;/code&gt; と &lt;code&gt;autosquash&lt;/code&gt; が使える。&lt;/p&gt;</summary>
    
    
    
    
    <category term="git" scheme="https://tyfkda.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>【Unity】ボタンのOnClickの引数にenumを使えるようにする（2020対応）</title>
    <link href="https://tyfkda.github.io/blog/2022/01/08/unity-event-enum.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/08/unity-event-enum.html</id>
    <published>2022-01-08T07:15:51.000Z</published>
    <updated>2022-01-08T08:25:51.829Z</updated>
    
    
    <summary type="html">&lt;p&gt;インスペクタでボタンの &lt;code&gt;OnClick&lt;/code&gt; イベントの引数に &lt;code&gt;enum&lt;/code&gt; の値も指定できるように修正した。&lt;/p&gt;
&lt;p&gt;動作環境： Unity 2021.1.6f1&lt;/p&gt;</summary>
    
    
    
    
    <category term="unity" scheme="https://tyfkda.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>スリザーリンクをSATソルバーで解く</title>
    <link href="https://tyfkda.github.io/blog/2022/01/05/slitherlink-solver.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/05/slitherlink-solver.html</id>
    <published>2022-01-04T23:33:45.000Z</published>
    <updated>2022-01-05T23:23:05.159Z</updated>
    
    
      
      
    <summary type="html">&lt;a href=&quot;/blog/2022/01/03/kakuro-solver.html&quot; title=&quot;おととい&quot;&gt;おととい&lt;/a&gt;、&lt;a href=&quot;/blog/2022/01/04/numberlink-solver.html&quot; title=&quot;昨日&quot;&gt;昨日&lt;/a&gt;に引き続き</summary>
      
    
    
    
    
    <category term="puzzle" scheme="https://tyfkda.github.io/tags/puzzle/"/>
    
  </entry>
  
  <entry>
    <title>ナンバーリンクをSATソルバーで解く</title>
    <link href="https://tyfkda.github.io/blog/2022/01/04/numberlink-solver.html"/>
    <id>https://tyfkda.github.io/blog/2022/01/04/numberlink-solver.html</id>
    <published>2022-01-04T00:11:56.000Z</published>
    <updated>2022-01-05T00:34:48.783Z</updated>
    
    
      
      
    <summary type="html">&lt;a href=&quot;/blog/2022/01/03/kakuro-solver.html&quot; title=&quot;昨日&quot;&gt;昨日&lt;/a&gt;に引き続き、今度はナンバーリンクのソルバーを作ってみた。

&lt;h3 id=&quot;ナンバーリンクとは？&quot;&gt;&lt;a href=&quot;#ナンバーリンクとは？&quot; class</summary>
      
    
    
    
    
    <category term="puzzle" scheme="https://tyfkda.github.io/tags/puzzle/"/>
    
  </entry>
  
</feed>
