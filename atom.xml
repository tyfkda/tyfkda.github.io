<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kludge Factory</title>
  
  <subtitle>tyfkda&#39;s blog</subtitle>
  <link href="https://tyfkda.github.io/atom.xml" rel="self"/>
  
  <link href="https://tyfkda.github.io/"/>
  <updated>2023-04-22T22:54:48.899Z</updated>
  <id>https://tyfkda.github.io/</id>
  
  <author>
    <name>tyfkda</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浮動小数点数とポインタを混在させるテクニック（NaN Boxing）</title>
    <link href="https://tyfkda.github.io/blog/2023/04/22/nan-boxing.html"/>
    <id>https://tyfkda.github.io/blog/2023/04/22/nan-boxing.html</id>
    <published>2023-04-22T12:00:00.000Z</published>
    <updated>2023-04-22T22:54:48.899Z</updated>
    
    
    <summary type="html">&lt;p&gt;動的言語内で扱う値の内部表現に関する最適化で、NaN Boxingという方法を知ったのでメモ。&lt;/p&gt;</summary>
    
    
    
    
    <category term="compiler" scheme="https://tyfkda.github.io/tags/compiler/"/>
    
  </entry>
  
  <entry>
    <title>ファミコンのDMCチャンネルの再現方法</title>
    <link href="https://tyfkda.github.io/blog/2023/04/06/nes-apu-dmc.html"/>
    <id>https://tyfkda.github.io/blog/2023/04/06/nes-apu-dmc.html</id>
    <published>2023-04-05T15:00:00.000Z</published>
    <updated>2023-04-19T23:08:57.707Z</updated>
    
    
    <summary type="html">&lt;p&gt;ファミコンは音楽を鳴らす機能として矩形波×2、三角波、ノイズというシンプルな方法に加えて、&lt;strong&gt;DMCというサンプリング音源による方法&lt;/strong&gt;がある。
そんな機能が搭載されてたこと自体も驚きだが、サンプリング音源なんて容量制限が厳しくて使ってるゲームなんてほとんどないでしょと後回しにしてたんだが、後期の豪華なゲームでは結構使われているので再現する方法を調べた。&lt;/p&gt;</summary>
    
    
    
    
    <category term="nes" scheme="https://tyfkda.github.io/tags/nes/"/>
    
    <category term="audio" scheme="https://tyfkda.github.io/tags/audio/"/>
    
  </entry>
  
  <entry>
    <title>映画『Winny』に出てくるED法</title>
    <link href="https://tyfkda.github.io/blog/2023/03/28/winny-movie.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/28/winny-movie.html</id>
    <published>2023-03-28T09:00:00.000Z</published>
    <updated>2023-04-01T03:30:25.143Z</updated>
    
    
    <summary type="html">&lt;p&gt;Winnyについては特に思い入れはないんだけど、&lt;a href=&quot;https://winny-movie.com/&quot;&gt;映画&lt;/a&gt;の予告編が面白そうだったので見てきた。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【Rust】参照から可変参照に変換する（未定義動作ではない（けど安全でもない））方法</title>
    <link href="https://tyfkda.github.io/blog/2023/03/20/ref-to-mut-ref.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/20/ref-to-mut-ref.html</id>
    <published>2023-03-20T09:00:00.000Z</published>
    <updated>2023-04-01T03:30:25.141Z</updated>
    
    
    <summary type="html">&lt;p&gt;Rustで参照から可変参照を拝借するにはワイルドに &lt;code&gt;unsafe&lt;/code&gt;を使うことになるんだけど（悪かった自慢）、&lt;a href=&quot;https://doc.rust-lang.org/clippy/&quot;&gt;Clippy&lt;/a&gt;にかけたら未定義動作だと言って怒られたので修正する。&lt;/p&gt;</summary>
    
    
    
    
    <category term="rust" scheme="https://tyfkda.github.io/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>【JavaScript】caseで「これ以上これ以下」にマッチさせる</title>
    <link href="https://tyfkda.github.io/blog/2023/03/19/js-case-range.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/19/js-case-range.html</id>
    <published>2023-03-19T01:00:00.000Z</published>
    <updated>2023-04-01T03:30:19.186Z</updated>
    
    
    <summary type="html">&lt;p&gt;JavaScriptの&lt;code&gt;case&lt;/code&gt;である範囲の値を指定できないかな〜と思ったらできるらしい。&lt;/p&gt;</summary>
    
    
    
    
    <category term="javascript" scheme="https://tyfkda.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>ruby.wasmを使ってみる</title>
    <link href="https://tyfkda.github.io/blog/2023/03/16/ruby-wasm-quickstart.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/16/ruby-wasm-quickstart.html</id>
    <published>2023-03-16T12:00:00.000Z</published>
    <updated>2023-04-01T03:30:19.190Z</updated>
    
    
    <summary type="html">&lt;p&gt;その昔JavaScriptがあまり好きではなくて、「ブラウザでもRubyでスクリプト書きてぇ〜！」などと思っていた。
その後JavaScriptにもだいぶ慣れたのでそういうこともなくなったが、最近ではwasm化されて動かせるとのことなので触ってみた。&lt;/p&gt;</summary>
    
    
    
    
    <category term="ruby" scheme="https://tyfkda.github.io/tags/ruby/"/>
    
    <category term="wasm" scheme="https://tyfkda.github.io/tags/wasm/"/>
    
  </entry>
  
  <entry>
    <title>【Rust】委譲に使えるクレート(Ambassador)</title>
    <link href="https://tyfkda.github.io/blog/2023/03/14/rust-delegation-ambassador.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/14/rust-delegation-ambassador.html</id>
    <published>2023-03-14T13:00:00.000Z</published>
    <updated>2023-04-01T03:30:19.190Z</updated>
    
    
    <summary type="html">&lt;p&gt;Rustでは継承が使えないが委譲をするにしてもグルーコードを書く必要があって面倒と思ってた（&lt;a href=&quot;/blog/2020/09/27/composition-over-inheritance.html&quot; title=&quot;「継承より合成（委譲）」について&quot;&gt;「継承より合成（委譲）」について&lt;/a&gt;）んだけど、とあるコードを見ていたら&lt;a href=&quot;https://crates.io/crates/ambassador&quot;&gt;ambassador&lt;/a&gt;というクレートを使っていた。&lt;/p&gt;</summary>
    
    
    
    
    <category term="rust" scheme="https://tyfkda.github.io/tags/rust/"/>
    
  </entry>
  
  <entry>
    <title>【WebAudio】スペクトラムアナライザーを作る</title>
    <link href="https://tyfkda.github.io/blog/2023/03/11/spectrum-analyzer.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/11/spectrum-analyzer.html</id>
    <published>2023-03-11T03:00:00.000Z</published>
    <updated>2023-04-01T03:30:25.143Z</updated>
    
    
    <summary type="html">&lt;p&gt;音楽に合わせてバーが動く、スペクトラムアナライザー（またの名をグラフィックイコライザー、通称グライコ）をずっとやってみたかった。
WebAudioを使えば音楽の再生やスペクトラム解析に必要なFFT計算も簡単に利用できるのでやってみた
（ハードウェアではなくソフトウェアで）。&lt;/p&gt;</summary>
    
    
    
    
    <category term="audio" scheme="https://tyfkda.github.io/tags/audio/"/>
    
  </entry>
  
  <entry>
    <title>【JupyterLab】コールバックでセル出力を書き換える方法</title>
    <link href="https://tyfkda.github.io/blog/2023/03/05/jupyterlab-output.html"/>
    <id>https://tyfkda.github.io/blog/2023/03/05/jupyterlab-output.html</id>
    <published>2023-03-05T08:30:00.000Z</published>
    <updated>2023-04-01T03:30:19.187Z</updated>
    
    
    <summary type="html">&lt;p&gt;表題の通り、JupyterLab でボタンによる操作などのコールバックで、セル出力を更新する場合の方法。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【WASM】例外を扱う</title>
    <link href="https://tyfkda.github.io/blog/2023/02/10/wasm-try-catch.html"/>
    <id>https://tyfkda.github.io/blog/2023/02/10/wasm-try-catch.html</id>
    <published>2023-02-10T10:00:00.000Z</published>
    <updated>2023-04-19T23:08:57.708Z</updated>
    
    
    <summary type="html">&lt;p&gt;WASMは通常の制御フローしかなくて大域ジャンプはできないものかと思い込んでいたが、例外も使えるということを知ったのでどんなもんか調べた。&lt;/p&gt;</summary>
    
    
    
    
    <category term="wasm" scheme="https://tyfkda.github.io/tags/wasm/"/>
    
  </entry>
  
</feed>
